<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>周小树</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-02-06T11:16:43.726Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>小树</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>css水平垂直居中方法总结</title>
    <link href="http://yoursite.com/2017/02/06/css%E6%B0%B4%E5%B9%B3%E5%9E%82%E7%9B%B4%E5%B1%85%E4%B8%AD%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2017/02/06/css水平垂直居中方法总结/</id>
    <published>2017-02-06T10:48:27.000Z</published>
    <updated>2017-02-06T11:16:43.726Z</updated>
    
    <content type="html"><![CDATA[<p>老一辈革命家告诉我们： 越基础的知识越要好好学。<br><a id="more"></a></p>
<h2 id="水平居中"><a href="#水平居中" class="headerlink" title="水平居中"></a>水平居中</h2><h3 id="单行文字水平居中"><a href="#单行文字水平居中" class="headerlink" title="单行文字水平居中"></a>单行文字水平居中</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">text-align</span>: <span class="selector-tag">center</span>;</div></pre></td></tr></table></figure>
<h3 id="设置margin-auto"><a href="#设置margin-auto" class="headerlink" title="设置margin auto"></a>设置margin auto</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/*div宽度固定*/</span></div><div class="line"><span class="selector-tag">div</span>&#123;</div><div class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</div><div class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="将div绝对定位"><a href="#将div绝对定位" class="headerlink" title="将div绝对定位"></a>将div绝对定位</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">div</span>&#123;</div><div class="line">    <span class="attribute">position</span>: absolute;</div><div class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</div><div class="line">    <span class="attribute">right</span>: <span class="number">0</span>;</div><div class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</div><div class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="div父元素flex布局"><a href="#div父元素flex布局" class="headerlink" title="div父元素flex布局"></a>div父元素flex布局</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.container</span>&#123;</div><div class="line">    <span class="attribute">display</span>: flex;</div><div class="line">    <span class="attribute">justify-content</span>: center;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="垂直居中"><a href="#垂直居中" class="headerlink" title="垂直居中"></a>垂直居中</h2><h3 id="设置等高line-height"><a href="#设置等高line-height" class="headerlink" title="设置等高line-height"></a>设置等高line-height</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">height</span>: 30<span class="selector-tag">px</span>;</div><div class="line"><span class="selector-tag">line-height</span>: 30<span class="selector-tag">px</span>;</div></pre></td></tr></table></figure>
<h3 id="将div绝对定位-1"><a href="#将div绝对定位-1" class="headerlink" title="将div绝对定位"></a>将div绝对定位</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">div</span>&#123;</div><div class="line">    <span class="attribute">position</span>: absolute;</div><div class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</div><div class="line">    <span class="attribute">bottom</span>: <span class="number">0</span>;</div><div class="line">    <span class="attribute">margin</span>: auto <span class="number">0</span>;</div><div class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="div父元素table布局"><a href="#div父元素table布局" class="headerlink" title="div父元素table布局"></a>div父元素table布局</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.container</span>&#123;</div><div class="line">    <span class="attribute">display</span>: table;</div><div class="line">&#125;</div><div class="line"><span class="selector-tag">div</span>&#123;</div><div class="line">    <span class="attribute">display</span>: table-cell;</div><div class="line">    <span class="attribute">vertical-align</span>: middle;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="div父元素flex布局-1"><a href="#div父元素flex布局-1" class="headerlink" title="div父元素flex布局"></a>div父元素flex布局</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.container</span>&#123;</div><div class="line">    <span class="attribute">display</span>: flex;</div><div class="line">    <span class="attribute">align-items</span>: center;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="水平垂直都居中"><a href="#水平垂直都居中" class="headerlink" title="水平垂直都居中"></a>水平垂直都居中</h2><h3 id="将div绝对定位-2"><a href="#将div绝对定位-2" class="headerlink" title="将div绝对定位"></a>将div绝对定位</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/* div宽高未知 */</span></div><div class="line"><span class="selector-class">.container</span> &#123;</div><div class="line">    <span class="attribute">position</span>: relative;</div><div class="line">    <span class="attribute">height</span>: <span class="number">150px</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-tag">div</span>&#123;</div><div class="line">    <span class="attribute">position</span>: absolute;</div><div class="line">    <span class="attribute">top</span>:<span class="number">50%</span>;</div><div class="line">    <span class="attribute">left</span>:<span class="number">50%</span>;</div><div class="line">    <span class="attribute">transform</span>: <span class="built_in">translate</span>(-50%,-50%);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/* div宽高已知 */</span></div><div class="line"><span class="selector-class">.container</span> &#123;</div><div class="line">    <span class="attribute">position</span>: relative;</div><div class="line">    <span class="attribute">height</span>: <span class="number">150px</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-tag">div</span>&#123;</div><div class="line">    <span class="attribute">position</span>: absolute;</div><div class="line">    <span class="attribute">top</span>: <span class="number">50%</span>;</div><div class="line">    <span class="attribute">left</span>: <span class="number">50%</span>;</div><div class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</div><div class="line">    <span class="attribute">height</span>: <span class="number">300px</span>;</div><div class="line">    <span class="attribute">margin-left</span>: <span class="number">100px</span>;</div><div class="line">    <span class="attribute">margin-top</span>: <span class="number">150px</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="div父元素flex布局-2"><a href="#div父元素flex布局-2" class="headerlink" title="div父元素flex布局"></a>div父元素flex布局</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.container</span> &#123;</div><div class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</div><div class="line">    <span class="attribute">display</span>: flex;</div><div class="line">&#125;</div><div class="line"><span class="selector-tag">div</span> &#123;</div><div class="line">    <span class="attribute">margin</span>: auto;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><blockquote>
<ol>
<li><a href="https://segmentfault.com/a/1190000007765664" target="_blank" rel="external">css 水平垂直居中总结</a></li>
<li><a href="http://www.cnblogs.com/clearsky/p/6353906.html" target="_blank" rel="external">css 水平垂直居中的方法总结</a></li>
</ol>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;老一辈革命家告诉我们： 越基础的知识越要好好学。&lt;br&gt;
    
    </summary>
    
      <category term="CSS" scheme="http://yoursite.com/categories/CSS/"/>
    
    
      <category term="CSS" scheme="http://yoursite.com/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>移动端Flex布局的一个实例</title>
    <link href="http://yoursite.com/2017/02/04/%E7%A7%BB%E5%8A%A8%E7%AB%AFFlex%E5%B8%83%E5%B1%80%E7%9A%84%E4%B8%80%E4%B8%AA%E5%AE%9E%E4%BE%8B/"/>
    <id>http://yoursite.com/2017/02/04/移动端Flex布局的一个实例/</id>
    <published>2017-02-04T07:57:58.000Z</published>
    <updated>2017-02-04T09:33:59.019Z</updated>
    
    <content type="html"><![CDATA[<p>之前做一个移动端电商项目采用了Flex布局，简单整理下。<br><a id="more"></a></p>
<p><strong>页面需求：</strong><br>1.页面在不同大小的手机屏幕上均呈一屏显示，不滚屏；<br>2.页面宽度为100%，头部和底部高度比例固定，不同块之间的间隙高度相等；<br>3.不同内容块各自占据页面一定比例。</p>
<p><strong>解决思路：</strong><br>1.首先通过使用<code>meta</code>标签将视窗布局设定为设备宽度，不允许缩放。代码如下：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0, user-scalable=0, minimum-scale=1.0, maximum-scale=1.0"</span> /&gt;</span></div></pre></td></tr></table></figure>
<p>2.将页面头部、底部及间隙的高度设定为一定的比例，如头、底部高度为10%；<br>3.头部和底部之间的内容块采用<code>Flex</code>布局，主轴方向（<code>flex-direction</code>）设定为<code>column</code>，给竖直方向上高度可伸缩的内容块设置一定比例的flex值，这样不同的内容块就能在竖直方向上按一定的比例伸缩了。另外，整个内容块的高度也是通过百分比设定的，把头部、底部和间隙的高度占比减去，基本就是内容块的高度占比了，但需根据实际的调试得出一个比较完美的值；<br>4.如果某一内容块在水平方向上分成了几小块，也可采用<code>Flex</code>布局，把这一内容块的主轴方向设定为<code>row</code>即可。作为某个Flex布局里的一部分，并不影响它自身<code>display</code>为<code>flex</code>。</p>
<p>总体而言，<code>Flex</code>布局在一些简单的移动端页面上还是很方便的，能有效利用页面的剩余空间。但若页面较为复杂，<code>Flex</code>布局和其他样式混用，调试起来就不那么容易了。</p>
<p>附上demo的完整代码：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0, user-scalable=0, minimum-scale=1.0, maximum-scale=1.0"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>移动端Flex布局的一个实例<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></div><div class="line">        <span class="selector-tag">html</span>&#123;</div><div class="line">            <span class="attribute">font-size</span>: <span class="number">100px</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="selector-tag">body</span>&#123;</div><div class="line">            <span class="attribute">margin</span>: <span class="number">0</span>;</div><div class="line">            <span class="attribute">padding</span>: <span class="number">0</span>;</div><div class="line">            <span class="attribute">height</span>: <span class="number">100%</span>;</div><div class="line">            <span class="attribute">font-family</span>: <span class="string">"Microsoft Yahei"</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="selector-class">.wrapper</span>&#123;</div><div class="line">            <span class="attribute">height</span>: <span class="number">100%</span>;</div><div class="line">            </div><div class="line">        &#125;</div><div class="line">        <span class="selector-class">.header</span>&#123;</div><div class="line">            <span class="attribute">height</span>:<span class="number">10%</span>;</div><div class="line">            <span class="attribute">font-size</span>: <span class="number">0.4rem</span>;</div><div class="line">            <span class="attribute">background-color</span>: grey;</div><div class="line">            <span class="attribute">text-align</span>: center;</div><div class="line">            <span class="attribute">margin-bottom</span>: <span class="number">2%</span>;</div><div class="line">            <span class="attribute">color</span>: white;</div><div class="line"></div><div class="line">        &#125;</div><div class="line">        <span class="selector-class">.footer</span>&#123;</div><div class="line">            <span class="attribute">height</span>:<span class="number">10%</span>;</div><div class="line">            <span class="attribute">font-size</span>: <span class="number">0.4rem</span>;</div><div class="line">            <span class="attribute">text-align</span>: center;</div><div class="line">            <span class="attribute">background-color</span>: grey;</div><div class="line">            <span class="attribute">color</span>: white;</div><div class="line"></div><div class="line">        &#125;</div><div class="line">        <span class="selector-class">.container</span>&#123;</div><div class="line">            <span class="attribute">font-size</span>: <span class="number">0.25rem</span>;</div><div class="line">            <span class="attribute">width</span>: <span class="number">100%</span>;</div><div class="line">            <span class="attribute">height</span>: <span class="number">79%</span>;</div><div class="line">            <span class="attribute">overflow</span>:hidden;</div><div class="line">            <span class="attribute">position</span>: relative;</div><div class="line">            <span class="attribute">display</span>: flex;</div><div class="line">            <span class="attribute">flex-direction</span>: column;</div><div class="line">        &#125;</div><div class="line">        <span class="selector-class">.container</span> <span class="selector-class">.baseline</span>&#123;</div><div class="line">            <span class="attribute">order</span>: <span class="number">0</span>;</div><div class="line">            <span class="attribute">flex</span>: <span class="number">2</span>;</div><div class="line">            <span class="attribute">width</span>: <span class="number">100%</span>;</div><div class="line">            <span class="attribute">background</span>: orange;</div><div class="line">        &#125;</div><div class="line">        <span class="selector-class">.container</span> <span class="selector-class">.info</span>&#123;</div><div class="line">            <span class="attribute">height</span>: <span class="number">50px</span>;</div><div class="line">            <span class="attribute">background</span>: grey;</div><div class="line">            <span class="attribute">color</span>: white;</div><div class="line">            <span class="attribute">margin-bottom</span>: <span class="number">2%</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="selector-class">.container</span> <span class="selector-class">.logo</span>&#123;</div><div class="line">            <span class="attribute">flex</span>: <span class="number">3</span>;</div><div class="line">            <span class="attribute">order</span>: <span class="number">2</span>;</div><div class="line">            <span class="attribute">background</span>: orange;</div><div class="line">            <span class="attribute">margin-bottom</span>: <span class="number">2%</span>;</div><div class="line">            <span class="attribute">display</span>: flex;</div><div class="line">            <span class="attribute">flex-direction</span>: row;</div><div class="line">            <span class="attribute">overflow</span>: hidden;</div><div class="line">            <span class="attribute">padding</span>: <span class="number">10px</span>;</div><div class="line">            <span class="attribute">justify-content</span>: space-between;</div><div class="line">        &#125;</div><div class="line">        <span class="selector-class">.container</span> <span class="selector-class">.logo</span> <span class="selector-tag">p</span>&#123;</div><div class="line">        	<span class="attribute">font-size</span>: <span class="number">0.2rem</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="selector-class">.container</span> <span class="selector-class">.logo</span> <span class="selector-class">.left</span>&#123;</div><div class="line">            <span class="attribute">flex</span>: <span class="number">4</span>;</div><div class="line">            <span class="attribute">margin-right</span>: <span class="number">10px</span>;</div><div class="line">            <span class="attribute">background</span>: white;</div><div class="line">        &#125;</div><div class="line">        <span class="selector-class">.container</span> <span class="selector-class">.logo</span> <span class="selector-class">.right</span>&#123;</div><div class="line">            <span class="attribute">flex</span>: <span class="number">3</span>;</div><div class="line">            <span class="attribute">background</span>: white;</div><div class="line">        &#125;</div><div class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrapper"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"header"</span>&gt;</span>header<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">section</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"baseline"</span>&gt;</span>image<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"info"</span>&gt;</span> image description<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"logo"</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"left"</span>&gt;</span></div><div class="line">                	left side</div><div class="line">                	<span class="tag">&lt;<span class="name">p</span>&gt;</span>随意伸缩页面高度和宽度，内容块的大小弹性自适应<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right"</span>&gt;</span></div><div class="line">                	right side</div><div class="line">                	<span class="tag">&lt;<span class="name">p</span>&gt;</span>随意伸缩页面高度和宽度，内容块的大小弹性自适应<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">section</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"footer"</span>&gt;</span>footer<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<p>最后，demo的效果图在此：<a href="http://zhouxiaoshu.com/demo/javascript/flextest.html" title="移动端Flex布局的一个实例" target="_blank" rel="external">移动端Flex布局的一个实例</a>，欢迎留言与交流。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;之前做一个移动端电商项目采用了Flex布局，简单整理下。&lt;br&gt;
    
    </summary>
    
      <category term="CSS" scheme="http://yoursite.com/categories/CSS/"/>
    
    
      <category term="CSS" scheme="http://yoursite.com/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>模仿京东首页的基本思路</title>
    <link href="http://yoursite.com/2016/11/30/%E6%A8%A1%E4%BB%BF%E4%BA%AC%E4%B8%9C%E9%A6%96%E9%A1%B5%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%80%9D%E8%B7%AF/"/>
    <id>http://yoursite.com/2016/11/30/模仿京东首页的基本思路/</id>
    <published>2016-11-30T13:38:58.000Z</published>
    <updated>2016-11-30T15:02:56.086Z</updated>
    
    <content type="html"><![CDATA[<p>为了系统地练习一下HTML、CSS和jQuery搭建页面的基本功，选择了一个典型的电商页面——京东首页作为素材。<a id="more"></a>这个页面的内容很多，而且比较繁复，所以写起来还是要费一番功夫的。</p>
<h2 id="主要步骤"><a href="#主要步骤" class="headerlink" title="主要步骤"></a>主要步骤</h2><p>1.先确定整个网页的构建方式，搭建出一个大致的结构，分为一个一个盒子；<br>2.对各个盒子逐一攻破。完成好每个盒子的HTML+CSS的部分；<br>3.静态网页做好后，使用不同的浏览器打开，检查不兼容的地方，解决掉；<br>4.观察网页上有些什么动态效果，使用jQuery一一加上。<br>5.动态效果完成后，使用不同的浏览器打开，检查不兼容的地方，解决掉，结束。</p>
<h2 id="HTML部分"><a href="#HTML部分" class="headerlink" title="HTML部分"></a>HTML部分</h2><p>HTML部分完成网页主要的构架。秉承着从整体到部分的思路，先把网页分成一个一个的盒子，再往盒子里放具体内容。盒子的划分一般是从上到下、从左往右的。</p>
<p>根据这个原则，我分出的大盒子有：头部、右侧边栏、商品汇总、浮动搜索框、京东秒杀、发现商品、领券中心、左侧边栏、横条广告、享品质、服饰美妆、家电手机、电脑数码、3C运动、爱吃、母婴家居、图书汽车、虚拟、还没逛够和底部。</p>
<p>其中有一些盒子的内部构造是一样的，例如服饰美妆和家电手机，那么构造代码和CSS代码可以重用，只需要区分一下两个盒子的不同之处。</p>
<p>这部分没什么难点，主要是CSS需要写得细心一些。京东头部的处理很妙，值得琢磨一番。</p>
<h2 id="CSS部分"><a href="#CSS部分" class="headerlink" title="CSS部分"></a>CSS部分</h2><p>CSS部分的处理与HTML是息息相关的，写法也是从整体到部分。一般而言，在最开头会放置<code>reset</code>的代码，解决不同浏览器自带<code>margin</code>、<code>padding</code>等问题，统一格式。可以将<code>reset.css</code>保存为一个独立的文件，每次写页面直接用。</p>
<p>写CSS时，对盒模型和定位的理解至关重要。如果不熟悉这两者的话，很可能调不好样式都找不到原因。看一个盒子时，首先分析盒子的整体定位，以及盒子里面各部分的关系。把盒子的组成拿捏好，要调的就是一些细节了。由于CSS里面很多盒子的样式可以重用，类的取名需注意下，做到在不同盒子的样式里尽量少改代码。</p>
<p>这个页面用到CSS3的新特性不多，主要是<code>box-shadow</code>、<code>transition</code>平移动画、背景色渐变这几样。老规矩，每次使用新特性时，打开IE看看支不支持。如果不支持，想想怎么平稳退化。比如IE对背景色渐变<code>linear-gradient</code>是不支持的，就可以先定一个基本的背景色，再定一个渐变色。另外，IE对平移动画的支持也不太好，动画效果很突兀，相比而言Chrome和Firefox就平滑很多。看了下京东自己的页面在IE上干脆没做图片<code>hover</code>的平移效果。</p>
<p>模仿一个线上的页面时，存图和取色必不可少。京东首页有很多图片都是webp格式，我保存下来之后在Chrome以外的浏览器上都显示不了，只好又重新截了图，累。。。</p>
<blockquote>
<p><strong>获取网页中某种颜色的编码和RGB值的方法：</strong><br>1.用Firefox浏览器自带的取色器（右上角导航图标-&gt;开发者-&gt;取色器-&gt;点击屏幕取色）；<br>2.下载FastStone Capture截图软件，自带取色功能；<br>3.装一个适用于Firefox、Chrome浏览器的插件ColorZilla；<br>4.Mac自带的DigitalColor Meter。</p>
</blockquote>
<h2 id="jQuery部分"><a href="#jQuery部分" class="headerlink" title="jQuery部分"></a>jQuery部分</h2><p>这个页面用到的动态效果不算太多，我用jQuery实现的，一些主要的效果直接贴代码上来吧。</p>
<h3 id="头部“切换城市”鼠标悬停效果"><a href="#头部“切换城市”鼠标悬停效果" class="headerlink" title="头部“切换城市”鼠标悬停效果"></a>头部“切换城市”鼠标悬停效果</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">	$(<span class="string">".location a"</span>).hover(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">		$(<span class="string">".location_change"</span>).show();</div><div class="line">	&#125;,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">		$(<span class="string">".location_change"</span>).hide();</div><div class="line">	&#125;)</div><div class="line">	$(<span class="string">".location_change"</span>).hover(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">		$(<span class="keyword">this</span>).show();</div><div class="line">		$(<span class="string">".location a"</span>).addClass(<span class="string">"hover"</span>);</div><div class="line">	&#125;,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">		$(<span class="keyword">this</span>).hide();</div><div class="line">		$(<span class="string">".location a"</span>).removeClass(<span class="string">"hover"</span>);</div><div class="line">	&#125;)</div><div class="line">&#125;)</div></pre></td></tr></table></figure>
<h3 id="点击搜索框，提示文字消失"><a href="#点击搜索框，提示文字消失" class="headerlink" title="点击搜索框，提示文字消失"></a>点击搜索框，提示文字消失</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">	<span class="keyword">var</span> a=$(<span class="string">".search .searchBox .searchBox_u input"</span>);</div><div class="line">	<span class="keyword">var</span> default_value=a.val();</div><div class="line">	a.focus(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">		<span class="keyword">if</span>(a.val()==default_value)&#123;</div><div class="line">            a.val(<span class="string">""</span>);</div><div class="line">		&#125;</div><div class="line">	&#125;);</div><div class="line">    a.blur(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">		<span class="keyword">if</span>(a.val()==<span class="string">""</span>)&#123;</div><div class="line">            a.val(default_value);</div><div class="line">		&#125;</div><div class="line">	&#125;);</div><div class="line">&#125;)</div></pre></td></tr></table></figure>
<h3 id="右侧信息栏公告tab切换"><a href="#右侧信息栏公告tab切换" class="headerlink" title="右侧信息栏公告tab切换"></a>右侧信息栏公告tab切换</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">	<span class="keyword">var</span> a=$(<span class="string">".notice .tab li a.first"</span>);</div><div class="line">	<span class="keyword">var</span> b=$(<span class="string">".notice .tab li a.last"</span>);</div><div class="line">	<span class="keyword">var</span> change1=$(<span class="string">".info .notice .content #change1"</span>);</div><div class="line">	<span class="keyword">var</span> change2=$(<span class="string">".info .notice .content #change2"</span>);</div><div class="line">	a.mouseover(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">		change1.show();</div><div class="line">		change2.hide();</div><div class="line">	    $(<span class="keyword">this</span>).addClass(<span class="string">"active"</span>);</div><div class="line">	    b.removeClass(<span class="string">"active"</span>);</div><div class="line">	&#125;);</div><div class="line">	b.mouseover(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">		change2.show();</div><div class="line">		change1.hide();</div><div class="line">	    $(<span class="keyword">this</span>).addClass(<span class="string">"active"</span>);</div><div class="line">	    a.removeClass(<span class="string">"active"</span>);</div><div class="line">	&#125;);</div><div class="line">&#125;)</div></pre></td></tr></table></figure>
<h3 id="滚动到一定高度，出现顶部固定搜索框"><a href="#滚动到一定高度，出现顶部固定搜索框" class="headerlink" title="滚动到一定高度，出现顶部固定搜索框"></a>滚动到一定高度，出现顶部固定搜索框</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$(<span class="built_in">window</span>).scroll(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">	<span class="keyword">if</span>($(<span class="built_in">document</span>).scrollTop()&gt;=<span class="number">522</span>)&#123;</div><div class="line">		$(<span class="string">"#floatsearch"</span>).show();</div><div class="line">	&#125;<span class="keyword">else</span>&#123;</div><div class="line">		$(<span class="string">"#floatsearch"</span>).hide();</div><div class="line">	&#125;</div><div class="line">&#125;)</div></pre></td></tr></table></figure>
<h3 id="广告轮播效果"><a href="#广告轮播效果" class="headerlink" title="广告轮播效果"></a>广告轮播效果</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line">$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">	<span class="keyword">var</span> index=<span class="number">0</span>;</div><div class="line">	<span class="keyword">var</span> adTimer=<span class="literal">null</span>;</div><div class="line">	<span class="keyword">var</span> $rolls=$(<span class="string">".ads .bigAds .rollbar a"</span>);</div><div class="line">	<span class="keyword">var</span> len=$rolls.length;</div><div class="line">	$rolls.mouseover(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">		index=$rolls.index(<span class="keyword">this</span>);</div><div class="line">		showImg(index);</div><div class="line">	&#125;).eq(<span class="number">0</span>).mouseover();</div><div class="line">	<span class="comment">//滑入停止动画，滑出开始动画</span></div><div class="line">	$(<span class="string">".bigAds"</span>).hover(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">		<span class="keyword">if</span>(adTimer)&#123;</div><div class="line">			clearInterval(adTimer);</div><div class="line">		&#125;</div><div class="line">	&#125;,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">		adTimer=setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">			showImg(index);</div><div class="line">			index++;</div><div class="line">			<span class="keyword">if</span>(index==len)&#123;</div><div class="line">				index=<span class="number">0</span>;</div><div class="line">			&#125;</div><div class="line">		&#125;,<span class="number">3000</span>);</div><div class="line">	&#125;).trigger(<span class="string">"mouseleave"</span>);</div><div class="line">&#125;)</div><div class="line"><span class="comment">//变换图像</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">showImg</span>(<span class="params">index</span>)</span>&#123;</div><div class="line">	<span class="keyword">var</span> $rolllist=$(<span class="string">".bigAds"</span>).find(<span class="string">"div a"</span>);</div><div class="line">	<span class="keyword">var</span> newhref=$rolllist.eq(index).attr(<span class="string">"href"</span>);</div><div class="line">	$(<span class="string">"#imgList"</span>).attr(<span class="string">"href"</span>,newhref)</div><div class="line">	             .find(<span class="string">"img"</span>).eq(index).stop(<span class="literal">true</span>,<span class="literal">true</span>).fadeIn()</div><div class="line">	             .siblings().fadeOut();</div><div class="line">	$rolllist.removeClass(<span class="string">"active"</span>)</div><div class="line">	         .eq(index).addClass(<span class="string">"active"</span>);          </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="倒计时"><a href="#倒计时" class="headerlink" title="倒计时"></a>倒计时</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line">$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">	<span class="keyword">var</span> h=<span class="number">20</span>;</div><div class="line">	<span class="keyword">var</span> m=<span class="number">59</span>;</div><div class="line">	<span class="keyword">var</span> s=<span class="number">59</span>;</div><div class="line">	setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        <span class="keyword">if</span>(s&lt;<span class="number">10</span>)&#123;</div><div class="line">        	$(<span class="string">"#second"</span>).html(<span class="string">"0"</span>+s);</div><div class="line">        &#125;<span class="keyword">else</span>&#123;</div><div class="line">        	$(<span class="string">"#second"</span>).html(s);</div><div class="line">        &#125;</div><div class="line">        s--;</div><div class="line">        <span class="keyword">if</span>(s&lt;<span class="number">0</span>)&#123;</div><div class="line">        	s=<span class="number">59</span>;</div><div class="line">        	m--;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span>(m&lt;<span class="number">10</span>)&#123;</div><div class="line">        	$(<span class="string">"#minute"</span>).html(<span class="string">"0"</span>+m);</div><div class="line">        &#125;<span class="keyword">else</span>&#123;</div><div class="line">        	$(<span class="string">"#minute"</span>).html(m);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span>(m&lt;<span class="number">0</span>)&#123;</div><div class="line">        	m=<span class="number">59</span>;</div><div class="line">        	h--;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span>(h&lt;<span class="number">10</span>)&#123;</div><div class="line">        	$(<span class="string">"#hour"</span>).html(<span class="string">"0"</span>+h);</div><div class="line">        &#125;<span class="keyword">else</span>&#123;</div><div class="line">        	$(<span class="string">"#hour"</span>).html(h);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span>(h&lt;<span class="number">0</span>)&#123;</div><div class="line">        	h=<span class="number">21</span>;</div><div class="line">        &#125;</div><div class="line">	&#125;,<span class="number">1000</span>)</div><div class="line">&#125;)</div></pre></td></tr></table></figure>
<h3 id="随页面滚动自动选中左侧导航对应菜单"><a href="#随页面滚动自动选中左侧导航对应菜单" class="headerlink" title="随页面滚动自动选中左侧导航对应菜单"></a>随页面滚动自动选中左侧导航对应菜单</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div></pre></td><td class="code"><pre><div class="line">$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">	<span class="comment">//点击左侧浮动导航条，变换导航样式</span></div><div class="line">	$(<span class="string">"#sidebar_l .sidebar_list li a"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">	     $(<span class="keyword">this</span>).addClass(<span class="string">"active"</span>).parents().siblings().find(<span class="string">"a"</span>).removeClass(<span class="string">"active"</span>);</div><div class="line">	&#125;)</div><div class="line">	<span class="comment">//随页面滚动自动选中左侧导航对应菜单</span></div><div class="line">	$(<span class="built_in">window</span>).scroll(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">		<span class="keyword">var</span> link=$(<span class="string">"#sidebar_l .sidebar_list li a"</span>);</div><div class="line">		<span class="keyword">var</span> top=$(<span class="built_in">document</span>).scrollTop()+<span class="number">50</span>;</div><div class="line">		<span class="keyword">var</span> top1=$(<span class="string">"#anchor1"</span>).offset().top;</div><div class="line">		<span class="keyword">var</span> top2=$(<span class="string">"#anchor2"</span>).offset().top;</div><div class="line">		<span class="keyword">var</span> top3=$(<span class="string">"#anchor3"</span>).offset().top;</div><div class="line">		<span class="keyword">var</span> top4=$(<span class="string">"#anchor4"</span>).offset().top;</div><div class="line">		<span class="keyword">var</span> top5=$(<span class="string">"#anchor5"</span>).offset().top;</div><div class="line">		<span class="keyword">var</span> top6=$(<span class="string">"#anchor6"</span>).offset().top;</div><div class="line">		<span class="keyword">var</span> top7=$(<span class="string">"#anchor7"</span>).offset().top;</div><div class="line">		<span class="keyword">var</span> top8=$(<span class="string">"#anchor8"</span>).offset().top;</div><div class="line">		<span class="keyword">var</span> top9=$(<span class="string">"#anchor9"</span>).offset().top;</div><div class="line">		<span class="keyword">var</span> top10=$(<span class="string">"#anchor10"</span>).offset().top;</div><div class="line">		<span class="keyword">if</span>(top&gt;=top1&amp;&amp;top&lt;=top2)&#123;</div><div class="line">            link.removeClass(<span class="string">"active"</span>).eq(<span class="number">0</span>).addClass(<span class="string">"active"</span>);</div><div class="line">		&#125;<span class="keyword">else</span> <span class="keyword">if</span>(top&gt;=top2&amp;&amp;top&lt;=top3)&#123;</div><div class="line">			link.removeClass(<span class="string">"active"</span>).eq(<span class="number">1</span>).addClass(<span class="string">"active"</span>);</div><div class="line">		&#125;<span class="keyword">else</span> <span class="keyword">if</span>(top&gt;=top3&amp;&amp;top&lt;=top4)&#123;</div><div class="line">			link.removeClass(<span class="string">"active"</span>).eq(<span class="number">2</span>).addClass(<span class="string">"active"</span>);</div><div class="line">		&#125;<span class="keyword">else</span> <span class="keyword">if</span>(top&gt;=top4&amp;&amp;top&lt;=top5)&#123;</div><div class="line">			link.removeClass(<span class="string">"active"</span>).eq(<span class="number">3</span>).addClass(<span class="string">"active"</span>);</div><div class="line">		&#125;<span class="keyword">else</span> <span class="keyword">if</span>(top&gt;=top5&amp;&amp;top&lt;=top6)&#123;</div><div class="line">			link.removeClass(<span class="string">"active"</span>).eq(<span class="number">4</span>).addClass(<span class="string">"active"</span>);</div><div class="line">		&#125;<span class="keyword">else</span> <span class="keyword">if</span>(top&gt;=top6&amp;&amp;top&lt;=top7)&#123;</div><div class="line">			link.removeClass(<span class="string">"active"</span>).eq(<span class="number">5</span>).addClass(<span class="string">"active"</span>);</div><div class="line">		&#125;<span class="keyword">else</span> <span class="keyword">if</span>(top&gt;=top7&amp;&amp;top&lt;=top8)&#123;</div><div class="line">			link.removeClass(<span class="string">"active"</span>).eq(<span class="number">6</span>).addClass(<span class="string">"active"</span>);</div><div class="line">		&#125;<span class="keyword">else</span> <span class="keyword">if</span>(top&gt;=top8&amp;&amp;top&lt;=top9)&#123;</div><div class="line">			link.removeClass(<span class="string">"active"</span>).eq(<span class="number">7</span>).addClass(<span class="string">"active"</span>);</div><div class="line">		&#125;<span class="keyword">else</span> <span class="keyword">if</span>(top&gt;=top9&amp;&amp;top&lt;=top10)&#123;</div><div class="line">			link.removeClass(<span class="string">"active"</span>).eq(<span class="number">8</span>).addClass(<span class="string">"active"</span>);</div><div class="line">		&#125;<span class="keyword">else</span> <span class="keyword">if</span>(top&gt;=top10)&#123;</div><div class="line">			link.removeClass(<span class="string">"active"</span>).eq(<span class="number">9</span>).addClass(<span class="string">"active"</span>);</div><div class="line">		&#125;</div><div class="line">	&#125;);</div><div class="line">    <span class="comment">//点击左侧导航条，页面滑动到对应内容</span></div><div class="line">    $(<span class="string">"#link1"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">	   $(<span class="string">"html,body"</span>).animate(&#123;<span class="attr">scrollTop</span>:$(<span class="string">"#anchor1"</span>).offset().top&#125;,<span class="number">500</span>);</div><div class="line"></div><div class="line">	&#125;)</div><div class="line">	$(<span class="string">"#link2"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">	   $(<span class="string">"html,body"</span>).animate(&#123;<span class="attr">scrollTop</span>:$(<span class="string">"#anchor2"</span>).offset().top&#125;,<span class="number">500</span>);</div><div class="line"></div><div class="line">	&#125;)</div><div class="line">	$(<span class="string">"#link3"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">	   $(<span class="string">"html,body"</span>).animate(&#123;<span class="attr">scrollTop</span>:$(<span class="string">"#anchor3"</span>).offset().top&#125;,<span class="number">500</span>);</div><div class="line"></div><div class="line">	&#125;)</div><div class="line">	$(<span class="string">"#link4"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">	   $(<span class="string">"html,body"</span>).animate(&#123;<span class="attr">scrollTop</span>:$(<span class="string">"#anchor4"</span>).offset().top&#125;,<span class="number">500</span>);</div><div class="line"></div><div class="line">	&#125;)</div><div class="line">	$(<span class="string">"#link5"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">	   $(<span class="string">"html,body"</span>).animate(&#123;<span class="attr">scrollTop</span>:$(<span class="string">"#anchor5"</span>).offset().top&#125;,<span class="number">500</span>);</div><div class="line"></div><div class="line">	&#125;)</div><div class="line">	$(<span class="string">"#link6"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">	   $(<span class="string">"html,body"</span>).animate(&#123;<span class="attr">scrollTop</span>:$(<span class="string">"#anchor6"</span>).offset().top&#125;,<span class="number">500</span>);</div><div class="line"></div><div class="line">	&#125;)</div><div class="line">	$(<span class="string">"#link7"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">	   $(<span class="string">"html,body"</span>).animate(&#123;<span class="attr">scrollTop</span>:$(<span class="string">"#anchor7"</span>).offset().top&#125;,<span class="number">500</span>);</div><div class="line"></div><div class="line">	&#125;)</div><div class="line">	$(<span class="string">"#link8"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">	   $(<span class="string">"html,body"</span>).animate(&#123;<span class="attr">scrollTop</span>:$(<span class="string">"#anchor8"</span>).offset().top&#125;,<span class="number">500</span>);</div><div class="line"></div><div class="line">	&#125;)</div><div class="line">	$(<span class="string">"#link9"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">	   $(<span class="string">"html,body"</span>).animate(&#123;<span class="attr">scrollTop</span>:$(<span class="string">"#anchor9"</span>).offset().top&#125;,<span class="number">500</span>);</div><div class="line"></div><div class="line">	&#125;)</div><div class="line">	$(<span class="string">"#link10"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">	   $(<span class="string">"html,body"</span>).animate(&#123;<span class="attr">scrollTop</span>:$(<span class="string">"#anchor10"</span>).offset().top&#125;,<span class="number">500</span>);</div><div class="line"></div><div class="line">	&#125;)	</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>最后，附上我做的页面：<a href="http://zhouxiaoshu.com/demo/javascript/jingdong.html" title="仿京东首页" target="_blank" rel="external">仿京东首页</a>，欢迎留言与交流。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;为了系统地练习一下HTML、CSS和jQuery搭建页面的基本功，选择了一个典型的电商页面——京东首页作为素材。
    
    </summary>
    
      <category term="CSS" scheme="http://yoursite.com/categories/CSS/"/>
    
    
      <category term="CSS" scheme="http://yoursite.com/tags/CSS/"/>
    
      <category term="HTML" scheme="http://yoursite.com/tags/HTML/"/>
    
      <category term="jQuery" scheme="http://yoursite.com/tags/jQuery/"/>
    
  </entry>
  
  <entry>
    <title>Ajax学习笔记</title>
    <link href="http://yoursite.com/2016/11/22/Ajax%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2016/11/22/Ajax学习笔记/</id>
    <published>2016-11-22T07:58:11.000Z</published>
    <updated>2016-11-22T09:37:56.778Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Ajax定义"><a href="#Ajax定义" class="headerlink" title="Ajax定义"></a>Ajax定义</h2><p>AJAX = Asynchronous JavaScript and XML（异步的 JavaScript 和 XML）。<br><a id="more"></a><br><code>Ajax</code> 不是一种新的编程语言，而是一种在无需重新加载整个网页的情况下，通过在后台与服务器进行少量数据交换，使网页实现异步更新的技术。可用于创建快速动态网页。</p>
<h2 id="Ajax工作原理"><a href="#Ajax工作原理" class="headerlink" title="Ajax工作原理"></a>Ajax工作原理</h2><p><code>XMLHttpRequest</code> 是 <code>Ajax</code> 的基础。用于在后台与服务器交换数据。所有现代浏览器（IE7+、Firefox、Chrome、Safari 以及 Opera）均内建 <code>XMLHttpRequest</code> 对象。</p>
<h3 id="创建XMLHttpRequest对象"><a href="#创建XMLHttpRequest对象" class="headerlink" title="创建XMLHttpRequest对象"></a>创建XMLHttpRequest对象</h3><p>1.现代浏览器：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">variable=<span class="keyword">new</span> XMLHttpRequest();</div></pre></td></tr></table></figure>
<p>2.老版本的 IE5、IE6 使用 <code>ActiveX</code> 对象：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">variable=<span class="keyword">new</span> ActiveXObject(<span class="string">"Microsoft.XMLHTTP"</span>);</div></pre></td></tr></table></figure>
<p>为应对所有的现代浏览器，包括 IE5 和 IE6，需检查浏览器是否支持 <code>XMLHttpRequest</code> 对象。如果支持，则创建 <code>XMLHttpRequest</code> 对象。如果不支持，则创建 <code>ActiveXObject</code> ：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> xmlhttp;</div><div class="line"><span class="keyword">if</span> (<span class="built_in">window</span>.XMLHttpRequest)</div><div class="line">  &#123;<span class="comment">// 如为 IE7+, Firefox, Chrome, Opera, Safari 浏览器</span></div><div class="line">  xmlhttp=<span class="keyword">new</span> XMLHttpRequest();</div><div class="line">  &#125;</div><div class="line"><span class="keyword">else</span></div><div class="line">  &#123;<span class="comment">// 如为 IE6, IE5 浏览器</span></div><div class="line">  xmlhttp=<span class="keyword">new</span> ActiveXObject(<span class="string">"Microsoft.XMLHTTP"</span>);</div><div class="line">  &#125;</div></pre></td></tr></table></figure>
<h3 id="向服务器发送请求"><a href="#向服务器发送请求" class="headerlink" title="向服务器发送请求"></a>向服务器发送请求</h3><h4 id="发送请求的方法"><a href="#发送请求的方法" class="headerlink" title="发送请求的方法"></a>发送请求的方法</h4><p>如要将请求发送到服务器，需使用 <code>XMLHttpRequest</code> 对象的 <code>open()</code> 和 <code>send()</code> 方法：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">xmlhttp.open(<span class="string">"GET"</span>,<span class="string">"test1.txt"</span>,<span class="literal">true</span>);</div><div class="line">xmlhttp.send();</div></pre></td></tr></table></figure>
<p><strong>1. open(method, url, async)</strong></p>
<p>规定请求的类型、url 以及是否异步处理请求。</p>
<ul>
<li>method：请求的类型；<code>GET</code> 或 <code>POST</code></li>
<li>url：文件在服务器上的位置</li>
<li>async：<code>true</code>（异步）或 <code>false</code>（同步）</li>
</ul>
<p><strong>2. send(string)</strong></p>
<p>将请求发送到服务器。string：仅用于 <code>POST</code> 请求。</p>
<h4 id="GET-还是-POST？"><a href="#GET-还是-POST？" class="headerlink" title="GET 还是 POST？"></a>GET 还是 POST？</h4><p><code>GET</code> 是最常见的请求类型，最常用于向服务器查询某些信息。必要时，可以将查询字符串参数追加到 <code>url</code> 的末尾，以便将信息发送给服务器。</p>
<p><code>POST</code> 通常用于向服务器发送应该被保存的数据。</p>
<p>与 <code>POST</code> 相比，<code>GET</code> 更简单也更快，并且在大部分情况下都能用。然而，在以下情况中，请使用 <code>POST</code> 请求：</p>
<ul>
<li>无法使用缓存文件（更新服务器上的文件或数据库）</li>
<li>向服务器发送大量数据（ <code>POST</code> 没有数据量限制）</li>
<li>发送包含未知字符的用户输入时，<code>POST</code> 比 <code>GET</code> 更稳定也更可靠</li>
</ul>
<p><strong>一个简单的 GET 请求：</strong></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">xmlhttp.open(<span class="string">"GET"</span>,<span class="string">"demo_get.asp"</span>,<span class="literal">true</span>);</div><div class="line">xmlhttp.send();</div></pre></td></tr></table></figure>
<p>上面的例子得到的可能是缓存的结果。为避免这种情况，需向 <code>url</code> 添加一个唯一的 <code>ID</code>：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">xmlhttp.open(<span class="string">"GET"</span>,<span class="string">"demo_get.asp?t="</span> + <span class="built_in">Math</span>.random(),<span class="literal">true</span>);</div><div class="line">xmlhttp.send();</div></pre></td></tr></table></figure>
<p>如要通过 <code>GET</code> 方法发送信息，需向 <code>url</code> 添加信息：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">xmlhttp.open(<span class="string">"GET"</span>,<span class="string">"demo_get2.asp?fname=Bill&amp;lname=Gates"</span>,<span class="literal">true</span>);</div><div class="line">xmlhttp.send();</div></pre></td></tr></table></figure>
<p><strong>一个简单 POST 请求：</strong></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">xmlhttp.open(<span class="string">"POST"</span>,<span class="string">"demo_post.asp"</span>,<span class="literal">true</span>);</div><div class="line">xmlhttp.send();</div></pre></td></tr></table></figure>
<p>如要像 <code>HTML</code> 表单那样<code>POST</code> 数据，需使用 <code>setRequestHeader()</code> 来添加 <code>HTTP</code> 头。然后在 <code>send()</code> 方法中规定希望发送的数据：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">xmlhttp.open(<span class="string">"POST"</span>,<span class="string">"ajax_test.asp"</span>,<span class="literal">true</span>);</div><div class="line">xmlhttp.setRequestHeader(<span class="string">"Content-type"</span>,<span class="string">"application/x-www-form-urlencoded"</span>);</div><div class="line">xmlhttp.send(<span class="string">"fname=Bill&amp;lname=Gates"</span>);</div></pre></td></tr></table></figure>
<p><strong>setRequestHeader(header,value)</strong><br>向请求添加 <code>HTTP</code> 头。</p>
<ul>
<li>header：规定头的名称</li>
<li>value：规定头的值</li>
</ul>
<h4 id="参数详解"><a href="#参数详解" class="headerlink" title="参数详解"></a>参数详解</h4><p><strong>1. url</strong><br>服务器上的文件地址。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">xmlhttp.open(<span class="string">"GET"</span>,<span class="string">"ajax_test.asp"</span>,<span class="literal">true</span>);</div></pre></td></tr></table></figure>
<p>该文件可以是任何类型的文件，比如 <code>.txt</code> 和 <code>.xml</code> ，或者服务器脚本文件，比如 <code>.asp</code> 和 <code>.php</code> （在传回响应之前，能够在服务器上执行任务）。</p>
<p><strong>2. 异步: True 或 False</strong><br><code>Ajax</code> 指的是异步 JavaScript 和 XML（Asynchronous JavaScript and XML）。</p>
<p><code>XMLHttpRequest</code> 对象如果要用于 <code>Ajax</code> 的话，其 <code>open()</code> 方法的 <code>async</code> 参数必须设置为 <code>true</code>：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">xmlhttp.open(<span class="string">"GET"</span>,<span class="string">"ajax_test.asp"</span>,<span class="literal">true</span>);</div></pre></td></tr></table></figure>
<p>通过 <code>Ajax</code>，<code>JavaScript</code> 无需等待服务器的响应，而是：</p>
<ul>
<li>在等待服务器响应时执行其他脚本</li>
<li>当响应就绪后对响应进行处理</li>
</ul>
<p><strong>Async = true</strong></p>
<p>当使用 <code>async=true</code> 时，请规定在处于 <code>onreadystatechange</code> 事件中的响应就绪时执行的函数：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">xmlhttp.onreadystatechange=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span></div><div class="line">  &#123;</div><div class="line">  <span class="keyword">if</span> (xmlhttp.readyState==<span class="number">4</span> &amp;&amp; xmlhttp.status==<span class="number">200</span>)</div><div class="line">    &#123;</div><div class="line">    <span class="built_in">document</span>.getElementById(<span class="string">"myDiv"</span>).innerHTML=xmlhttp.responseText;</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">xmlhttp.open(<span class="string">"GET"</span>,<span class="string">"test1.txt"</span>,<span class="literal">true</span>);</div><div class="line">xmlhttp.send();</div></pre></td></tr></table></figure>
<p><strong>Async = false</strong><br>如需使用 <code>async=false</code> ，请将 <code>open()</code> 方法中的第三个参数改为 <code>false</code>：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">xmlhttp.open(<span class="string">"GET"</span>,<span class="string">"test1.txt"</span>,<span class="literal">false</span>);</div></pre></td></tr></table></figure>
<p>一般不推荐使用 <code>async=false</code> ，但是对于一些小型的请求，也是可以的。请记住，<code>JavaScript</code> 会等到服务器响应就绪才继续执行。如果服务器繁忙或缓慢，应用程序会挂起或停止。</p>
<p>当使用 <code>async=false</code> 时，无需编写 <code>onreadystatechange</code> 函数 ，把代码放到 <code>send()</code> 语句后面即可：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">xmlhttp.open(<span class="string">"GET"</span>,<span class="string">"test1.txt"</span>,<span class="literal">false</span>);</div><div class="line">xmlhttp.send();</div><div class="line"><span class="built_in">document</span>.getElementById(<span class="string">"myDiv"</span>).innerHTML=xmlhttp.responseText;</div></pre></td></tr></table></figure>
<h3 id="服务器响应"><a href="#服务器响应" class="headerlink" title="服务器响应"></a>服务器响应</h3><p>如需获得来自服务器的响应，请使用 <code>XMLHttpRequest</code> 对象的 <code>responseText</code> 或 <code>responseXML</code> 属性。</p>
<ul>
<li><p>responseText：获得字符串形式的响应数据。</p>
</li>
<li><p>responseXML：获得 <code>XML</code> 形式的响应数据。</p>
</li>
</ul>
<p><strong>responseText 属性</strong></p>
<p>如果来自服务器的响应并非 <code>XML</code> ，请使用 <code>responseText</code> 属性。<br><code>responseText</code> 属性返回字符串形式的响应，因此可以这样使用：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">document</span>.getElementById(<span class="string">"myDiv"</span>).innerHTML=xmlhttp.responseText;</div></pre></td></tr></table></figure>
<p><strong>responseXML 属性</strong></p>
<p>如果来自服务器的响应是 <code>XML</code>，而且需要作为 <code>XML</code> 对象进行解析，请使用 <code>responseXML</code> 属性。</p>
<p>请求 <code>books.xml</code> 文件，并解析响应：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">xmlDoc=xmlhttp.responseXML;</div><div class="line">txt=<span class="string">""</span>;</div><div class="line">x=xmlDoc.getElementsByTagName(<span class="string">"title"</span>);</div><div class="line"><span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;x.length;i++)</div><div class="line">  &#123;</div><div class="line">  txt=txt + x[i].childNodes[<span class="number">0</span>].nodeValue + <span class="string">"&lt;br /&gt;"</span>;</div><div class="line">  &#125;</div><div class="line"><span class="built_in">document</span>.getElementById(<span class="string">"myDiv"</span>).innerHTML=txt;</div></pre></td></tr></table></figure>
<h3 id="onreadystatechange-事件"><a href="#onreadystatechange-事件" class="headerlink" title="onreadystatechange 事件"></a>onreadystatechange 事件</h3><p>当请求被发送到服务器时，我们需要执行一些基于响应的任务。每当 <code>readyState</code> 改变时，就会触发 <code>onreadystatechange</code> 事件。<code>readyState</code> 属性存有 <code>XMLHttpRequest</code> 的状态信息。</p>
<p><code>XMLHttpRequest</code> 对象的三个重要属性：</p>
<p><strong>1.onreadystatechange    </strong><br>存储函数（或函数名），每当 <code>readyState</code> 属性改变时，就会调用该函数。</p>
<p><strong>2.readyState</strong><br>存有 <code>XMLHttpRequest</code> 的状态。从 0 到 4 发生变化。</p>
<ul>
<li>0：未初始化。尚未调用 <code>open()</code> 方法</li>
<li>1：启动。已调用 <code>open()</code> 方法，尚未调用 <code>send()</code> 方法</li>
<li>2：发送数据。 已调用 <code>send()</code> 方法，尚未接收到响应</li>
<li>3：已接收部分响应数据</li>
<li>4：已接收全部响应数据，可以在客户端使用了</li>
</ul>
<p><strong>3.status</strong>    </p>
<ul>
<li>200：成功处理请求</li>
<li>404：未找到页面</li>
<li>500：出现内部服务器错误</li>
</ul>
<p>在 <code>onreadystatechange</code> 事件中，规定当服务器响应已做好被处理的准备时所执行的任务。当 <code>readyState</code> 等于 4 且状态为 200 时，表示响应已就绪：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">xmlhttp.onreadystatechange=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span></div><div class="line">  &#123;</div><div class="line">  <span class="keyword">if</span> (xmlhttp.readyState==<span class="number">4</span> &amp;&amp; xmlhttp.status==<span class="number">200</span>)</div><div class="line">    &#123;</div><div class="line">    <span class="built_in">document</span>.getElementById(<span class="string">"myDiv"</span>).innerHTML=xmlhttp.responseText;</div><div class="line">    &#125;</div><div class="line">  &#125;</div></pre></td></tr></table></figure>
<p><code>onreadystatechange</code> 事件被触发 5 次（0 - 4），对应着 <code>readyState</code> 的每个变化。</p>
<p><strong>使用 Callback 函数</strong></p>
<p>Callback 翻译为回调函数。它以参数的形式传递给另一个函数，当另一个函数执行完成后开始执行。<br>如果要执行多个 <code>Ajax</code> 任务，就应该为创建 <code>XMLHttpRequest</code> 对象编写一个标准的函数，并为每个 <code>Ajax</code> 任务调用该函数。</p>
<p>该函数调用应该包含 <code>url</code> 以及发生 <code>onreadystatechange</code> 事件时在页面中调用的回调函数（每次调用可能不尽相同）：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">myFunction</span>(<span class="params"></span>)</span>&#123;</div><div class="line">loadXMLDoc(<span class="string">"ajax_info.txt"</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span></div><div class="line">  &#123;</div><div class="line">  <span class="keyword">if</span> (xmlhttp.readyState==<span class="number">4</span> &amp;&amp; xmlhttp.status==<span class="number">200</span>)</div><div class="line">    &#123;</div><div class="line">    <span class="built_in">document</span>.getElementById(<span class="string">"myDiv"</span>).innerHTML=xmlhttp.responseText;</div><div class="line">    &#125;</div><div class="line">  &#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>本文内容主要摘录于 W3School 的 <a href="http://www.w3school.com.cn/example/ajax_examples.asp" target="_blank" rel="external">Ajax教程</a>。查看<a href="http://www.w3school.com.cn/example/ajax_examples.asp" target="_blank" rel="external">Ajax实例</a>。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Ajax定义&quot;&gt;&lt;a href=&quot;#Ajax定义&quot; class=&quot;headerlink&quot; title=&quot;Ajax定义&quot;&gt;&lt;/a&gt;Ajax定义&lt;/h2&gt;&lt;p&gt;AJAX = Asynchronous JavaScript and XML（异步的 JavaScript 和 XML）。&lt;br&gt;
    
    </summary>
    
      <category term="javaScript" scheme="http://yoursite.com/categories/javaScript/"/>
    
    
      <category term="Ajax" scheme="http://yoursite.com/tags/Ajax/"/>
    
  </entry>
  
  <entry>
    <title>对stripeTables函数添加表格斑马线效果的理解</title>
    <link href="http://yoursite.com/2016/10/20/%E5%AF%B9stripeTables%E5%87%BD%E6%95%B0%E6%B7%BB%E5%8A%A0%E8%A1%A8%E6%A0%BC%E6%96%91%E9%A9%AC%E7%BA%BF%E6%95%88%E6%9E%9C%E7%9A%84%E7%90%86%E8%A7%A3/"/>
    <id>http://yoursite.com/2016/10/20/对stripeTables函数添加表格斑马线效果的理解/</id>
    <published>2016-10-20T02:57:33.000Z</published>
    <updated>2016-10-22T03:35:31.958Z</updated>
    
    <content type="html"><![CDATA[<p>通常，如果浏览器支持css3，那么设置表格隔行样式（即斑马线效果）很简单。<a id="more"></a>只需下面两行样式：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">tr</span><span class="selector-pseudo">:nth-child(odd)</span> &#123;<span class="attribute">background-color</span>: <span class="number">#fff</span>;&#125;</div><div class="line"><span class="selector-tag">tr</span><span class="selector-pseudo">:nth-child(even)</span> &#123;<span class="attribute">background-color</span>: <span class="number">#ffc</span>;&#125;</div></pre></td></tr></table></figure></p>
<p>上面的样式效果为: 表格奇数行背景颜色为白色，偶数行背景颜色为浅黄色。</p>
<blockquote>
<p>注：<code>:nth-child(odd)</code>选取的是每个父元素下索引值为奇数的元素，如果你的表格里含有标题行，则上面的样式效果会不一样。因为标题行<code>tr</code>的父元素是<code>thead</code>，非标题行<code>tr</code>的父元素是<code>tbody</code>。这时标题行的背景色是白色，而非标题行第一行为白色，第二行为浅黄色，依次相间。</p>
</blockquote>
<p>如果<code>:nth-child()</code>不可用，则可通过javaScript编写一个stripeTables函数来达到相同的效果。代码如下：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">stripeTables</span>(<span class="params"></span>)</span>&#123;</div><div class="line">	<span class="comment">//检测浏览器是否支持getElementsByTagName这个DOM方法，如不支持则退出函数</span></div><div class="line">	<span class="keyword">if</span>(!<span class="built_in">document</span>.getElementsByTagName) <span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">	<span class="comment">//取得所有的table元素</span></div><div class="line">	<span class="keyword">var</span> tables=<span class="built_in">document</span>.getElementsByTagName(<span class="string">"table"</span>);</div><div class="line">	<span class="comment">//定义变量odd, rows</span></div><div class="line">	<span class="keyword">var</span> odd, rows;</div><div class="line">	<span class="comment">//遍历table元素</span></div><div class="line">	<span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;tables.length;i++)&#123;</div><div class="line">	    <span class="comment">//初始化odd为false</span></div><div class="line">		odd=<span class="literal">false</span>;</div><div class="line">	    <span class="comment">//取得表格所有的数据行</span></div><div class="line">		rows=tables[i].getElementsByTagName(<span class="string">"tr"</span>);</div><div class="line">	    <span class="comment">//遍历表格所有的数据行</span></div><div class="line">		<span class="keyword">for</span>(<span class="keyword">var</span> j=<span class="number">0</span>;j&lt;rows.length;j++)&#123;</div><div class="line">            <span class="comment">//如果odd的值为true，设置背景颜色为浅黄色，并把odd的值修改为false</span></div><div class="line">			<span class="keyword">if</span>(odd==<span class="literal">true</span>)&#123;</div><div class="line">				rows[i].style.backgroundColor=<span class="string">"#ffc"</span>;</div><div class="line">				odd=<span class="literal">false</span>;</div><div class="line">			&#125;</div><div class="line">			<span class="comment">//如果odd的值为false，不设置样式，但把odd的值修改为true</span></div><div class="line">			<span class="keyword">else</span>&#123;</div><div class="line">				odd=<span class="literal">true</span>;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>我一开始不明白为什么要把<code>odd</code>的值初始化为<code>false</code>，以及为什么<code>odd</code>已经初始化为<code>false</code>了，下面的循环还能检测<code>odd==true</code>。后来在网上搜了下大家的理解，还是不甚明白，却突然转过弯来，我的两个问题其实是一个问题。遍历数据行的循环里，不一定非要执行<code>odd=true</code>的，它还有<code>else</code>板块。循环过程如下：</p>
<blockquote>
<p><strong>第一轮循环</strong><br>由于<code>odd</code>被初始化为<code>false</code>了，所以执行<code>else</code>板块，不设置样式，把<code>odd</code>的值改为<code>true</code>。即表格的第一行不设置背景样式。</p>
<p><strong>第二轮循环</strong><br>检测到<code>odd==true</code>，所以设置背景色为浅黄色，并把<code>odd</code>的值改为<code>false</code>。即表格第二行背景设置为浅黄色。</p>
<p><strong>第三轮循环</strong><br>由于<code>odd</code>等于<code>false</code>，所以执行<code>else</code>板块，不设置样式，把<code>odd</code>的值改为<code>true</code>。即表格的第三行不设置背景样式。</p>
</blockquote>
<p>下面的循环依次类推。</p>
<p>这样，表格里的偶数行都有了新的背景颜色浅黄色。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;通常，如果浏览器支持css3，那么设置表格隔行样式（即斑马线效果）很简单。
    
    </summary>
    
      <category term="javaScript" scheme="http://yoursite.com/categories/javaScript/"/>
    
    
      <category term="javaScript" scheme="http://yoursite.com/tags/javaScript/"/>
    
  </entry>
  
  <entry>
    <title>几个有用的javascript DOM函数</title>
    <link href="http://yoursite.com/2016/10/18/%E5%87%A0%E4%B8%AA%E6%9C%89%E7%94%A8%E7%9A%84javascript-DOM%E5%87%BD%E6%95%B0/"/>
    <id>http://yoursite.com/2016/10/18/几个有用的javascript-DOM函数/</id>
    <published>2016-10-18T02:31:38.000Z</published>
    <updated>2016-10-18T03:30:27.216Z</updated>
    
    <content type="html"><![CDATA[<p>《JavaScript DOM编程艺术》一书中一些有用的函数，可以收录进脚本。<br><a id="more"></a></p>
<h2 id="addLoadEvent函数"><a href="#addLoadEvent函数" class="headerlink" title="addLoadEvent函数"></a>addLoadEvent函数</h2><p>假如你在页面加载完毕时需执行多个函数，如把它们逐一绑定到onload事件上，只有最后绑定的函数才会实际执行。如需绑定的函数不是很多，可创建匿名函数来容纳多个函数，然后把匿名函数绑定到onload事件上。而如果函数过多，则可通过addLoadEvent（）把这些函数创建为一个队列，逐一执行。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//把现有的window.onload事件处理函数的值存入变量onload</span></div><div class="line"><span class="comment">//如果在这个处理函数上还未绑定任何函数，就像平时那样把新函数添加给它</span></div><div class="line"><span class="comment">//如果在这个处理函数上已经绑定了一些函数，就把新函数追加到现有指令的末尾</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">addLoadEvent</span>(<span class="params">func</span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> oldonload=<span class="built_in">window</span>.onload;</div><div class="line">    <span class="keyword">if</span>(<span class="keyword">typeof</span> <span class="built_in">window</span>.onload!=<span class="string">'function'</span>)&#123;</div><div class="line">        <span class="built_in">window</span>.onload=func;</div><div class="line">    &#125;<span class="keyword">else</span>&#123;</div><div class="line">        <span class="built_in">window</span>.onload=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">            oldonload();</div><div class="line">            func();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">addLoadEvent(firstFunction);</div><div class="line">addLoadEvent(secondFunction);</div></pre></td></tr></table></figure>
<h2 id="insertAfter函数"><a href="#insertAfter函数" class="headerlink" title="insertAfter函数"></a>insertAfter函数</h2><p>虽然DOM本身没有提供inserAfter方法，但它提供了把一个节点插入到另一个节点之后所需的所有工具。可利用已有的DOM方法和属性编写一个insertAfter函数。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">insertAfter</span>(<span class="params">newElement,targetElement</span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> parent=targetElement.parentNode;</div><div class="line">    <span class="keyword">if</span>(parent.lastChild==targetElement)&#123;</div><div class="line">        parent.appendChild(newElement);</div><div class="line">    &#125;<span class="keyword">else</span>&#123;</div><div class="line">        parent.insertBefore(newElement,targetElement.nextSibling);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;《JavaScript DOM编程艺术》一书中一些有用的函数，可以收录进脚本。&lt;br&gt;
    
    </summary>
    
      <category term="javaScript" scheme="http://yoursite.com/categories/javaScript/"/>
    
    
      <category term="javaScript" scheme="http://yoursite.com/tags/javaScript/"/>
    
  </entry>
  
  <entry>
    <title>git添加远程库上传本地文件</title>
    <link href="http://yoursite.com/2016/09/29/git%E6%B7%BB%E5%8A%A0%E8%BF%9C%E7%A8%8B%E5%BA%93%E4%B8%8A%E4%BC%A0%E6%9C%AC%E5%9C%B0%E6%96%87%E4%BB%B6/"/>
    <id>http://yoursite.com/2016/09/29/git添加远程库上传本地文件/</id>
    <published>2016-09-29T03:03:34.000Z</published>
    <updated>2016-09-29T09:50:26.330Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h1><ul>
<li><p><a href="https://git-for-windows.github.io/" target="_blank" rel="external">安装git</a>；</p>
</li>
<li><p>注册github，并为账号添加SSH keys。</p>
</li>
</ul>
<a id="more"></a>
<h1 id="主要步骤"><a href="#主要步骤" class="headerlink" title="主要步骤"></a>主要步骤</h1><h2 id="在github上创建新的仓库"><a href="#在github上创建新的仓库" class="headerlink" title="在github上创建新的仓库"></a>在github上创建新的仓库</h2><p>登录github后，点击页面右上角“+”号，选择“new repository”进入页面，在“Repository name”输入框内填写你的仓库名，而后点击页面下方的“Create repository”按钮即可创建。  </p>
<h2 id="创建本地仓库"><a href="#创建本地仓库" class="headerlink" title="创建本地仓库"></a>创建本地仓库</h2><p>在本地选择一个地方创建一个文件夹，作为你的本地仓库，如在D盘创建一个名为“markdownPhoto”（一般与github仓库同名）的文件夹，用于存放markdown需要的图片。然后在本地仓库里放入你想放的内容，可以是单个文件，也可以是文件夹。 </p>
<h2 id="将本地仓库与github上的远程库建立关联"><a href="#将本地仓库与github上的远程库建立关联" class="headerlink" title="将本地仓库与github上的远程库建立关联"></a>将本地仓库与github上的远程库建立关联</h2><p>在本地仓库点鼠标右键，选择“Git Bash Here”，调出命令框。运行命令:       </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git remote add origin git@github.com:goodKathy/markdownPhoto.git</div></pre></td></tr></table></figure>
<p>注意把代码里的“goodKathy”换成你自己的github用户名。</p>
<h2 id="将本地仓库的内容推送到远程库中"><a href="#将本地仓库的内容推送到远程库中" class="headerlink" title="将本地仓库的内容推送到远程库中"></a>将本地仓库的内容推送到远程库中</h2><p>执行命令：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git push -u origin master</div></pre></td></tr></table></figure>
<p>在这里出现了一个报错：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">error: failed to push some refs to <span class="string">'https://github.com/goodKathy/markdownPhoto.git'</span></div><div class="line">hint: Updates were rejected because the remote contains work that you <span class="keyword">do</span></div><div class="line">hint: not have locally. This is usually caused by another repository pushing</div><div class="line">hint: to the same ref. You may want to first integrate the remote changes</div><div class="line">hint: (e.g., <span class="string">'git pull ...'</span>) before pushing again.</div><div class="line">hint: See the <span class="string">'Note about fast-forwards'</span> <span class="keyword">in</span> <span class="string">'git push --help'</span> <span class="keyword">for</span> details.</div></pre></td></tr></table></figure>
<p>搜索了下，出现这个提示的原因是远程仓库里有内容更新，但本地仓库里没有更新，导致push失败。这时你需要把远程库里的内容先pull到本地仓库来，执行命令：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git pull origin master</div></pre></td></tr></table></figure>
<p>然而又出现报错： </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">fatal: refusing to merge unrelated histories</div></pre></td></tr></table></figure>
<p>又搜索了下解决方案，原来还需要添加可选项“–allow unrelated histories”，于是重新执行命令：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git pull origin master --allow unrelated histories</div></pre></td></tr></table></figure>
<p>提示需要输入commit message（即备注）：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">Merge branch <span class="string">'master'</span> of github.com:goodKathy/markdownPhoto</div><div class="line">    </div><div class="line"><span class="comment"># Please enter a commit message to explain why this merge is necessary,</span></div><div class="line"><span class="comment"># especially if it merges an updated upstream into a topic branch.</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># Lines starting with '#' will be ignored, and an empty message aborts</span></div><div class="line"><span class="comment"># the commit.</span></div></pre></td></tr></table></figure>
<p>输入后（我是直接把这个命令框关了，再git bash个新的命令框），远程仓库就同步到本地了。  </p>
<h2 id="在本地添加文件试试推送"><a href="#在本地添加文件试试推送" class="headerlink" title="在本地添加文件试试推送"></a>在本地添加文件试试推送</h2><p>我在本地的markdownPhoto仓库里添加了一个叫images的文件夹，里面放了一张图“cow.jpg”。  </p>
<blockquote>
<p>注意： git不能管理空的文件夹，文件夹里必须有文件才能add .  </p>
</blockquote>
<p>接下来执行指令：<br>git add .<br>git commit -m “提交cow.jpg”<br>git push -u origin master  </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">Administrator@MICROSO-5A8UT0A MINGW32 /d/Program Files/markdownPhotos (master)</div><div class="line">$ git add .</div><div class="line">    </div><div class="line">Administrator@MICROSO-5A8UT0A MINGW32 /d/Program Files/markdownPhotos (master)</div><div class="line">$ git commit -m <span class="string">"提交cow.jpg"</span></div><div class="line">On branch master</div><div class="line">Your branch is up-to-date with <span class="string">'origin/master'</span>.</div><div class="line">nothing to commit, working tree clean</div><div class="line">    </div><div class="line">Administrator@MICROSO-5A8UT0A MINGW32 /d/Program Files/markdownPhotos (master)</div><div class="line">$ git push -u origin master</div><div class="line">Branch master <span class="built_in">set</span> up to track remote branch master from origin.</div><div class="line">Everything up-to-date</div></pre></td></tr></table></figure>
<p>现在本地仓库的内容就同步到远程库了，刷新远程库页面，就会看到多了一个”images”的文件夹，点开一看，里面有个“cow.jpg”,点开这个图，点击“Download”按钮，便能获得图片地址，添加到markdown啦。之后需要推送新的内容，重复这个步骤即可。  </p>
<p>推荐下廖雪峰老师的<a href="http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="external">Git教程</a>，讲得很到位。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前期准备&quot;&gt;&lt;a href=&quot;#前期准备&quot; class=&quot;headerlink&quot; title=&quot;前期准备&quot;&gt;&lt;/a&gt;前期准备&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://git-for-windows.github.io/&quot;&gt;安装git&lt;/a&gt;；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;注册github，并为账号添加SSH keys。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Git" scheme="http://yoursite.com/categories/Git/"/>
    
    
      <category term="git" scheme="http://yoursite.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客优化的一些问题</title>
    <link href="http://yoursite.com/2016/09/28/Hexo%E5%8D%9A%E5%AE%A2%E4%BC%98%E5%8C%96%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2016/09/28/Hexo博客优化的一些问题/</id>
    <published>2016-09-27T16:37:40.000Z</published>
    <updated>2016-10-18T03:36:05.161Z</updated>
    
    <content type="html"><![CDATA[<h1 id="写在前面的话"><a href="#写在前面的话" class="headerlink" title="写在前面的话"></a>写在前面的话</h1><p>花了两三天，终于通过github pages+Hexo框架把博客给搭了起来。<a id="more"></a>期间几乎每一个小小的进展，都遇到了一些阻碍。解决问题的思路总结：多谷歌，多百度。直接把错误提示往搜索框里一贴，定有不少前人踩过同样的坑并给出了解决方案。如没有满意的搜索结果，不妨换一种搜索方式。总之，多尝试，多试错，总会盼得柳暗花明。因计算机基础薄弱，这个解决的过程有着颇多不易，我是取得了一点点进展就会振臂高呼的。不少程序员给出的解决方案有一种既定假设，写出来的“专业术语”读者肯定能懂，所以有些步骤并没有讲得很详细，殊不知隔行如隔山，小白要多翻几个山头才能取得真经。我站在一个小白的角度，把自己在搭建博客过程中遇到的一些问题尽量以浅显易懂的方式解答，既让自己加深一下印象，也或许能让后来的小白少走些弯路。<br><!--more--></p>
<p>至于为什么要搭建这个博客呢，一是想学习编程，本来是想从零开始敲出来，深感进程艰难，后来在知乎看到一句话，大意是学习别人造好的轮子远比自己闷头乱敲进步得快。恍然大悟，赶紧撤下，悔时还不晚；二是觉得拥有自己的网站是一件很酷的事情；三是能有个安安静静的地方写些零碎，记些成长。</p>
<p>搭建Hexo博客之前的过程在网上有很多很好的教程，本文就不赘述了。在此只贴几个比较好的网址供大家查阅，内容有重复，比较着看即可。</p>
<ul>
<li><a href="https://xuanwo.org/2015/03/26/hexo-intor/" target="_blank" rel="external">史上最详细的Hexo博客搭建图文教程</a></li>
<li><a href="http://sunwhut.com/2015/10/30/buildBlog/" target="_blank" rel="external">如何利用GitHub Pages和Hexo快速搭建个人博客</a></li>
<li><a href="http://www.jianshu.com/p/834d7cc0668d" target="_blank" rel="external">我的博客是如何搭建的（github pages + HEXO + 域名绑定）</a></li>
</ul>
<p>本文主要讲的博客搭建完成后优化的一些问题。</p>
<hr>
<h1 id="更新日志"><a href="#更新日志" class="headerlink" title="更新日志"></a>更新日志</h1><p>2016.9.27–更新写在前面的话。</p>
<hr>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;写在前面的话&quot;&gt;&lt;a href=&quot;#写在前面的话&quot; class=&quot;headerlink&quot; title=&quot;写在前面的话&quot;&gt;&lt;/a&gt;写在前面的话&lt;/h1&gt;&lt;p&gt;花了两三天，终于通过github pages+Hexo框架把博客给搭了起来。
    
    </summary>
    
      <category term="Hexo" scheme="http://yoursite.com/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
      <category term="github" scheme="http://yoursite.com/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2016/09/24/hello-world/"/>
    <id>http://yoursite.com/2016/09/24/hello-world/</id>
    <published>2016-09-24T02:25:59.776Z</published>
    <updated>2016-10-20T05:02:40.973Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.<br><a id="more"></a></p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;br&gt;
    
    </summary>
    
      <category term="Hexo" scheme="http://yoursite.com/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
  </entry>
  
</feed>
